global:
  namespace: "gravity-cloud"
  storageClass: "standard"
  nodeSelector: []
  annotations: []

components:
  gravityMatter:
    deployment:
      name: gravity-matter
      replicas: 1
      image:
        repository: gravitycloud/matter
        tag: latest
        pullPolicy: Always
      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"
      env:
        GRAVITY_API_KEY:
          valueFrom:
            secretKeyRef:
              name: gravity-matter-secrets
              key: gravity-api-key
        GRAVITY_API_URL: ""
        GRAVITY_SOCKET_URL: ""
        POSTGRES_HOST: "postgres-gravity-matter-service"
        POSTGRES_USER: ""
        POSTGRES_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: postgres-matter-secrets
              key: postgres-password
        GITHUB_APP_NAME: "gravity-matter"
        GITHUB_APP_ID:
          valueFrom:
            secretKeyRef:
              name: gravity-matter-secrets
              key: github-app-id
        GITHUB_WEBHOOK_SECRET:
          valueFrom:
            secretKeyRef:
              name: gravity-matter-secrets
              key: github-webhook-secret
        GITHUB_CLIENT_ID:
          valueFrom:
            secretKeyRef:
              name: gravity-matter-secrets
              key: github-client-id
        GITHUB_CLIENT_SECRET:
          valueFrom:
            secretKeyRef:
              name: gravity-matter-secrets
              key: github-client-secret
        GITHUB_PRIVATE_KEY: # this is base64 encoded
          valueFrom:
            secretKeyRef:
              name: gravity-matter-secrets
              key: github-private-key
        AI_API_KEY:
          valueFrom:
            secretKeyRef:
              name: gravity-matter-secrets
              key: ai-api-key
        AI_MODEL: "gpt-4o-mini-2024-07-18"
        AI_PROVIDER: "openai"
        ENABLE_PR_REVIEW_COMMENT: "true"
        # CUSTOM_PROMPT_SYSTEM: "You are a code review agent that reviews code and provides feedback on the code."
        # CUSTOM_PROMPT_USER: "Review the following code and provide feedback on the code. Following is the Pull Request to review: {{prData}} and output the response in JSON format as following: { summary: { description: AI generated description of the Pull Request in markdown string }, quality: { score: between 0-100, recommendations: [string array for any code/logic level changes that code make the PR better and not what is already good] }, checklist: { score: number of items that pass in the checklist, recommendations: [string array for items that fail and what to do] }, review: { event: \"APPROVE\" | \"REQUEST_CHANGES\" | \"COMMENT\", reviewBody?: string, reviewComments?: { path: string; body: string; position: number }[] }, codeChangeGeneration: { event: \"APPROVE\" | \"REQUEST_CHANGES\" | \"COMMENT\", reviewBody?: string, reviewComments?: { path: string; body: string; position: number }[] } }"
    service:
      name: gravity-matter-service
      type: ClusterIP
      port: 8080
      targetPort: 8080
    ingress:
      enabled: true
      className: "nginx"
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      hosts:
        - host: gravity-matter.example.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: gravity-matter-tls
          hosts:
            - gravity-matter.example.com

  postgres:
    enabled: true
    deployment:
      name: postgres-gravity-matter
      replicas: 1
      image:
        repository: postgres
        tag: latest
        pullPolicy: IfNotPresent
      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"
      env:
        POSTGRES_DB: ""
        POSTGRES_USER: ""
        POSTGRES_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: postgres-matter-secrets
              key: postgres-password
      volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-gravity-matter-pvc
    service:
      name: postgres-gravity-matter-service
      type: ClusterIP
      port: 5432
      targetPort: 5432

persistence:
  postgres:
    enabled: true
    name: postgres-gravity-matter-pvc
    size: "1Gi"
    accessMode: ReadWriteOnce

secrets:
  gravityMatter:
    name: gravity-matter-secrets
    data:
      gravity-api-key: ""
      github-app-id: ""
      github-webhook-secret: ""
      github-client-id: ""
      github-client-secret: ""
      github-private-key: ""
      ai-api-key: ""
  postgres:
    name: postgres-matter-secrets
    data:
      postgres-password: ""
